package br.ufes.dwws.ufespay.core.persistence;

import java.util.Collection;

import javax.ejb.Stateless;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.PersistenceContextType;

import br.ufes.dwws.ufespay.core.domain.Transaction;
import br.ufes.inf.nemo.jbutler.ejb.persistence.BaseJPADAO;

/** TODO: generated by FrameWeb. Should be documented. */
@Stateless
public class TransactionDAOJPA extends BaseJPADAO<Transaction> implements TransactionDAO {
	/** Serialization id (using default value, change if necessary). */
	private static final long serialVersionUID = 1L;

	/** TODO: generated by FrameWeb. Should be documented. */
	@PersistenceContext
	private EntityManager entityManager;

	/** TODO: generated by FrameWeb. Should be documented. */
	@Override
	protected EntityManager getEntityManager() {
		return entityManager;
	}

	/** TODO: generated by FrameWeb. Should be documented. */
	@Override
	public Transaction getById(Long id) {
		return this.retrieveById(id);
	}

	/** TODO: generated by FrameWeb. Should be documented. */
	@Override
	public Transaction update(Transaction transac) {
		Transaction transacUpdated = null;

		//entityManager.getTransaction().begin();
		transacUpdated = entityManager.merge(transac);
		//entityManager.getTransaction().commit();
		return transacUpdated;
	}

	/** TODO: generated by FrameWeb. Should be documented. */
	@Override
	public Collection<Transaction> getAll() {
		return this.retrieveAll();
	}
	
}